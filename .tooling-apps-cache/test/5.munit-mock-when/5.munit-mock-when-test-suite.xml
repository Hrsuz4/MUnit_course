<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="5.munit-mock-when-test-suite.xml" />
	<munit:test name="animalsGETRequestSuccessTestCase" doc:id="a7a49b10-204b-4114-a345-1c44b17aea58" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - HTTP GET Request" doc:id="12322952-584f-4cbc-9dd7-87f2814b0be9" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="GET Request - getAnimalsLostPayload" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"animals":[&#10;		"animal":"cow",&#10;		"animal":"pig"&#10;	]&#10;}&#10;]' mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getAnimals" doc:id="26a055c9-0e4a-41e0-a1ed-d554f5958d2d" name="getAnimals"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Log VALIDATION PAYLOAD" doc:id="7aed4f0e-8f21-4b07-8cbf-7d400621df16" message='#[%dw 2.0&#10;&#10;output application/json&#10;---&#10;{&#10;	"Log VALIDATION PAYLOAD": payload&#10;}]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="setPetNameSuccessTestCase" doc:id="5471876a-5229-4e8e-a4b7-927856376adb" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - set variable Pet Name as Zeus" doc:id="91d9243a-f799-4738-9931-2efe3cb9be26" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Set Variable - myPetName" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="myPetName" value='#["ZEUS"]' />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getPetName" doc:id="f218c3e8-7a0d-4edb-9c85-77c010c5a5d8" name="getPetName"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Logger VALIDATION VARIABLE" doc:id="90f1d162-f1cc-40b2-b635-690cbba5f89c" message='#[%dw 2.0&#10;&#10;output application/json&#10;---&#10;&#10;{&#10;	"log_variable_validation_scope": vars.myPetName&#10;}]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="resetPetNameAfterNullSuccessTestCase" doc:id="94debf0e-b59b-44f1-b542-78a6a9365d38" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - set variable Pet Name As Null" doc:id="6ff964f8-d316-4191-b2dd-ece5760dd43d" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Set Variable - myPetName" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="myPetName" value="#[null]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Ref to getPetName" doc:id="55dd2d24-6cfe-48f2-a5c8-f7ca932d505d" name="getPetName"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Logger VALIDATION VARIABLE" doc:id="7f7dd024-8dc5-4acf-8446-a17d888a493f" message='#[%dw 2.0&#10;&#10;output application/json&#10;---&#10;&#10;{&#10;	"log_variable_validation_scope": vars.myPetName&#10;}]' />
		</munit:validation>
	</munit:test>
	<munit:test name="getFruitsSuccessTestCase" doc:id="cb5b0fa9-38eb-4a5c-90ee-e4bde8519d05" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - Flow Reference - generateFruitsName" doc:id="ebd740f2-2c0c-4a90-a56f-b713017fa029" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="generateFruitsName" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[["banana", "orange", "apple"]&#10;]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getFruitsName" doc:id="caea18c3-d020-4cc8-b67c-a757252089ea" name="getFruitsName"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Logger VALIDATION PAYLOAD" doc:id="cadf3327-7790-4041-9515-3d4ed4a9ef11" message='#[%dw 2.0

output application/json
---

{
	"log_payload_validation_scope": payload
}]' />
		</munit:validation>
	</munit:test>


</mule>